{"version":3,"sources":["state/types/actions.ts","ui/components/NumberInput.tsx","state/actions.ts","ui/containers/InputDigits.ts","itoa/base.ts","itoa/index.ts","ui/components/DisplayString.tsx","ui/containers/DisplayWords.tsx","state/reducers.ts","state/store.ts","index.tsx","ui/index.tsx"],"names":["ActionType","NumberInput","props","currentValue","onChange","type","className","value","e","input","parseInt","target","isNaN","connect","state","dispatch","SET_TARGET","payload","setTarget","ONE","TEN","POWER","divmod","n","d","Math","floor","twoDigits","result","push","t","o","join","helper","power","big","small","concat","hundreds","remaining","threeDigits","itoa","pow","length","Error","shift","DisplayString","content","combineReducers","action","store","createStore","reducer","ReactDOM","render","InputDigits","DisplayWords","document","getElementById"],"mappings":"8PAAYA,E,uCCkDGC,G,MAzCV,SAAAC,GAAU,IACLC,EAA2BD,EAA3BC,aAAcC,EAAaF,EAAbE,SAEtB,OACE,2BACEC,KAAK,SACLC,UAAU,cACVC,MAAK,UAAKJ,GACVC,SAAU,SAAAI,GACR,IAAMC,EAAQC,SAASF,EAAEG,OAAOJ,MAAO,IACvCH,EAASQ,MAAMH,GAAS,EAAIA,S,SDnBxBT,K,yBAAAA,M,KEEL,ICGQa,eACb,SAACC,GAAD,MAAuB,CAAEX,aAAcW,EAAMH,WAC7C,SAAAI,GAAQ,MAAK,CACXX,SAAU,SAACG,GACLA,GAAS,GAAKA,EAAQ,MACxBQ,EDRiB,SAACR,GAAD,MAAqC,CAC5DF,KAAML,EAAWgB,WACjBC,QAAS,CAAEV,UCMIW,CAAUX,QALZM,CASbZ,G,OCdWkB,EAAM,CACjB,GACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,YAGWC,EAAM,CACjB,GACA,GACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,UAGWC,EAAQ,CAAC,GAAI,WAAY,UAAW,UAAW,YAQ/CC,EAAS,SAACC,EAAWC,GAAZ,MAA0B,CAACC,KAAKC,MAAMH,EAAIC,GAAID,EAAIC,IC1ClEG,EAAY,SAACJ,GACjB,GAAU,IAANA,EACF,MAAO,GAET,IAAMK,EAAS,GACf,GAAIL,EAAI,GACNK,EAAOC,KAAKV,EAAII,QACX,CAAC,IAAD,EACUD,EAAOC,EAAG,IADpB,mBACEO,EADF,KACKC,EADL,KAELH,EAAOC,KAAKT,EAAIU,IACZC,EAAI,GACNH,EAAOC,KAAKV,EAAIY,IAGpB,MAAO,CAAC,MAAOH,EAAOI,KAAK,OAWvBC,EAAS,SAATA,EAAUV,EAAWW,GACzB,GAAU,IAANX,EACF,MAAO,GAF4C,MAIhCD,EAAOC,EAAG,KAJsB,mBAI9CY,EAJ8C,KAIzCC,EAJyC,KAK/CR,EAASK,EAAOE,EAAKD,EAAQ,GAAGG,OAbpB,SAACd,GAAyB,IAAD,EACbD,EAAOC,EAAG,KADG,mBACpCe,EADoC,KAC1BC,EAD0B,KAE3C,OAAID,EAAW,EACN,CAACnB,EAAImB,GAAW,WAAWD,OAAOV,EAAUY,IAE9CZ,EAAUY,GAQ4BC,CAAYJ,IAIzD,OAHIA,EAAQ,GAAKF,EAAQ,GACvBN,EAAOC,KAAKR,EAAMa,IAEbN,GAiBMa,EAdF,SAAClB,GACZ,GAAU,IAANA,EACF,MAAO,OAET,GAAIA,GAAKE,KAAKiB,IAAI,GAAmB,EAAfrB,EAAMsB,QAC1B,MAAM,IAAIC,MAAM,gCAElB,IAAMhB,EAASK,EAAOV,EAAG,GAIzB,MAHkB,QAAdK,EAAO,IACTA,EAAOiB,QAEFjB,EAAOI,KAAK,MC3CNc,G,MAFV,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,yBAAKzC,UAAU,iBAAiByC,KCAvClC,eAAQ,SAACC,GAAD,MAAuB,CAAEiC,QAASN,EAAK3B,EAAMH,WAArDE,CACbiC,G,iBCMaE,cAAgB,CAC7BrC,OAVa,WAAgC,IAA/BG,EAA8B,uDAAtB,EAAGmC,EAAmB,uCAC5C,OAAQA,EAAO5C,MACb,KAAKL,EAAWgB,WACd,OAAOiC,EAAOhC,QAAQV,MACxB,QACE,OAAOO,MCHEoC,EAFDC,YAAYC,G,MCI1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,mBCJW,WACb,OACE,yBAAK5C,UAAU,OACb,gDACA,kBAACiD,EAAD,MACA,kBAACC,EAAD,SDDF,OAEFC,SAASC,eAAe,W","file":"static/js/main.3e783202.chunk.js","sourcesContent":["export enum ActionType {\n  SET_TARGET = 'SET_TARGET'\n}\n\nexport interface SetTargetAction {\n  type: ActionType.SET_TARGET\n  payload: {\n    value: number\n  }\n}\n\nexport type Action = SetTargetAction\n","import React from 'react'\n// import Button from './Button'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport './NumberInput.css'\n\nconst NumberInput: React.FC<{\n  currentValue: number\n  onChange: (value: number) => void\n}> = props => {\n  const { currentValue, onChange } = props\n\n  return (\n    <input\n      type=\"number\"\n      className=\"NumberInput\"\n      value={`${currentValue}`}\n      onChange={e => {\n        const input = parseInt(e.target.value, 10)\n        onChange(isNaN(input) ? 0 : input)\n      }}\n    />\n  )\n  // return (\n  //   <div className=\"NumberInput\">\n  //     <div className=\"buttons\">\n  //       {[...Array(10)].map((_, i) => {\n  //         return (\n  //           <Button\n  //             key={i}\n  //             onClick={() => {\n  //               onChange(currentValue * 10 + i)\n  //             }}\n  //           >\n  //             {i}\n  //           </Button>\n  //         )\n  //       })}\n  //       <Button\n  //         onClick={() => {\n  //           onChange(Math.floor(currentValue / 10))\n  //         }}\n  //       >\n  //         <FontAwesomeIcon icon={faBackspace} />\n  //       </Button>\n  //     </div>\n  //   </div>\n  // )\n}\n\nexport default NumberInput\n","import { ActionType, SetTargetAction } from './types/actions'\n\nexport const setTarget = (value: number): SetTargetAction => ({\n  type: ActionType.SET_TARGET,\n  payload: { value }\n})\n","import { connect } from 'react-redux'\nimport NumberInput from '../components/NumberInput'\nimport { setTarget } from '../../state/actions'\nimport { RootState } from '../../state/types/state'\n\nexport default connect(\n  (state: RootState) => ({ currentValue: state.target }),\n  dispatch => ({\n    onChange: (value: number) => {\n      if (value >= 0 && value < 1e15) {\n        dispatch(setTarget(value))\n      }\n    }\n  })\n)(NumberInput)\n","export const ONE = [\n  '',\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n  'eight',\n  'nine',\n  'ten',\n  'eleven',\n  'twelve',\n  'thirteen',\n  'fourteen',\n  'fifteen',\n  'sixteen',\n  'seventeen',\n  'eighteen',\n  'nineteen'\n]\n\nexport const TEN = [\n  '',\n  '',\n  'twenty',\n  'thirty',\n  'forty',\n  'fifty',\n  'sixty',\n  'seventy',\n  'eighty',\n  'ninety'\n]\n\nexport const POWER = ['', 'thousand', 'million', 'billion', 'trillion']\n\n/**\n * A python style divmod method.\n *\n * @param n The numberator in the division\n * @param d The denominator in the division\n */\nexport const divmod = (n: number, d: number) => [Math.floor(n / d), n % d]\n","import { ONE, TEN, POWER, divmod } from './base'\n\nconst twoDigits = (n: number): string[] => {\n  if (n === 0) {\n    return []\n  }\n  const result = []\n  if (n < 20) {\n    result.push(ONE[n])\n  } else {\n    const [t, o] = divmod(n, 10)\n    result.push(TEN[t])\n    if (o > 0) {\n      result.push(ONE[o])\n    }\n  }\n  return ['and', result.join('-')]\n}\n\nconst threeDigits = (n: number): string[] => {\n  const [hundreds, remaining] = divmod(n, 100)\n  if (hundreds > 0) {\n    return [ONE[hundreds], 'hundred'].concat(twoDigits(remaining))\n  }\n  return twoDigits(remaining)\n}\n\nconst helper = (n: number, power: number): string[] => {\n  if (n === 0) {\n    return []\n  }\n  const [big, small] = divmod(n, 1000)\n  const result = helper(big, power + 1).concat(threeDigits(small))\n  if (small > 0 && power > 0) {\n    result.push(POWER[power])\n  }\n  return result\n}\n\nconst itoa = (n: number): string => {\n  if (n === 0) {\n    return 'zero'\n  }\n  if (n >= Math.pow(10, POWER.length * 3)) {\n    throw new Error('Number too large to convert.')\n  }\n  const result = helper(n, 0)\n  if (result[0] === 'and') {\n    result.shift()\n  }\n  return result.join(' ')\n}\n\nexport default itoa\n","import React from 'react'\nimport './DisplayString.css'\n\nconst DisplayString: React.FC<{\n  content: string\n}> = ({ content }) => <div className=\"DisplayString\">{content}</div>\n\nexport default DisplayString\n","import { connect } from 'react-redux'\nimport { RootState } from '../../state/types/state'\nimport itoa from '../../itoa'\nimport DisplayString from '../components/DisplayString'\n\nexport default connect((state: RootState) => ({ content: itoa(state.target) }))(\n  DisplayString\n)\n","import { Action, ActionType } from './types/actions'\nimport { combineReducers } from 'redux'\n\nconst target = (state = 0, action: Action) => {\n  switch (action.type) {\n    case ActionType.SET_TARGET:\n      return action.payload.value\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  target\n})\n","import reducer from './reducers'\nimport { createStore } from 'redux'\n\nconst store = createStore(reducer)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './ui'\nimport { Provider } from 'react-redux'\nimport store from './state/store'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n","import React from 'react'\nimport InputDigits from './containers/InputDigits'\nimport DisplayWords from './containers/DisplayWords'\nimport './App.css'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Numbers In Words</h1>\n      <InputDigits />\n      <DisplayWords />\n    </div>\n  )\n}\n"],"sourceRoot":""}